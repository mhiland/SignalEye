name: Docker

on:
  pull_request: # Trigger on PRs
    branches: [ "main" ]
  push:
    branches: [ "main" ] # Trigger on push to main branch
    tags: [ 'v*.*.*' ] # Trigger on tag creation matching 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Build Docker image
        id: build-step
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: docker/bundled.dockerfile
          push: false
          platforms: linux/amd64,linux/arm64,linux/arm/v8

  build-and-push:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      id-token: write
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      DOCKER_BUILDKIT: 1
      BUILDX_CONTAINERD_IMAGE_STORE: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build_and_push_step
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: docker/bundled.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64,linux/arm/v8

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.build_and_push_step.outputs.digest }}

  sign:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      packages: write
      id-token: write
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Sign the published Docker image
        env:
          TAGS: ${{ needs.build-and-push.outputs.tags }}
          DIGEST: ${{ needs.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
